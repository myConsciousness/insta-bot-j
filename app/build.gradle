/*
 * Copyright 2021 Kato Shinya.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

import io.franzbecker.gradle.lombok.task.DelombokTask

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.palantir.git-version' version '0.12.3'
    id 'io.franzbecker.gradle-lombok' version '4.0.0'
}

publishing {
   publications {
        group 'org.thinkit.bot.instagram'
        version = gitVersion()

        gpr(MavenPublication) {
            artifactId = 'insta-bot-j'
            from(components.java)
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/myConsciousness/insta-bot-j")
            credentials {
                username = System.getenv("GITHUB_USER")
                password = System.getenv("GITHUB_PUBLISH_TOKEN")
            }
        }
    }
}

repositories {
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/myConsciousness/insta-bot-j")
        credentials {
            username = System.getenv("GITHUB_USER")
            password = System.getenv("GITHUB_DOWNLOAD_PACKAGE_TOKEN")
        }
    }

    jcenter()
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

dependencies {
    implementation 'com.google.guava:guava:30.1-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.2'

    implementation group: 'org.mybatis', name: 'mybatis', version: '3.5.6'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.23'

	implementation 'org.projectlombok:lombok:1.18.18'
	annotationProcessor 'org.projectlombok:lombok:1.18.18'
	testImplementation 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'

    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.4.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'

    implementation 'org.thinkit.api.catalog:catalog-api:v1.0.2'
    implementation 'org.thinkit.zenna:zenna-db:v1.0.2'
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams true
        events 'started', 'skipped', 'passed', 'failed'
        exceptionFormat 'full'
    }
}

lombok {
    version = "1.18.16"
}

task delombok( type: DelombokTask ) {
    description = 'Generates delomboked source.'

    sourceSets.all {
        if ( it.name != SourceSet.TEST_SOURCE_SET_NAME ) {
            it.allJava.srcDirs.each {
                args( it, '-d', "${buildDir}/${delombok.name}" )
            }
        }
    }
}

javadoc {
    dependsOn delombok

    source = file( "${buildDir}/${delombok.name}" )
    title = 'Insta Bot J'
    options.links('https://docs.oracle.com/en/java/javase/13/docs/api/')
    options.charSet("utf-8")
    options.showFromPublic()
    destinationDir = file('../docs')
    failOnError = false
}
